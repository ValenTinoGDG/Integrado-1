<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login / Register with Firebase</title>

    <!-- Firebase Modules -->
    <script type="module">
      // Firebase configuration object (Replace with your Firebase project configuration)
      const firebaseConfig = {
        apiKey: "AIzaSyDFcdxq6AyaTH8JsPdnGGkhhT5Prr6i3tE",
        authDomain: "ip-cam-9711b.firebaseapp.com",
        projectId: "ip-cam-9711b",
        storageBucket: "ip-cam-9711b.firebasestorage.app",
        messagingSenderId: "1033319875515",
        appId: "1:1033319875515:web:dc44e762baabd94eb4ba9e",
        measurementId: "G-6TWBNRPKWK"
      };
      
      // Import necessary Firebase modules (Firebase v9+ modular SDK)
      import { initializeApp } from "https://www.gstatic.com/firebasejs/9.16.0/firebase-app.js";
      import { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from "https://www.gstatic.com/firebasejs/9.16.0/firebase-auth.js";
      
      // Initialize Firebase
      const app = initializeApp(firebaseConfig);
      const auth = getAuth(app);

      // Handle form submission for login/register
      document.getElementById('authForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;
        
        // Check if it's login or register based on the button clicked
        const isRegister = document.getElementById('actionButton').dataset.action === 'register';
        
        try {
          if (isRegister) {
            // Register new user
            const userCredential = await createUserWithEmailAndPassword(auth, email, password);
            console.log('User registered:', userCredential);
            
            // Optional: Send registration details to the backend
            const response = await fetch('/register', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ email, id: userCredential.user.uid })
            });
            
            const data = await response.json();
            console.log('Backend response:', data);
          } else {
            // Login existing user
            const userCredential = await signInWithEmailAndPassword(auth, email, password);
            console.log('User logged in:', userCredential);

            // Get Firebase ID Token
            const idToken = await userCredential.user.getIdToken();
            console.log('Firebase ID Token:', idToken);
            
            // Store the ID Token in a cookie
            document.cookie = `idToken=${idToken}; path=/; max-age=${60 * 60 * 24 * 30};`  // expires in 1 month
            setUserPage(userCredential.user.uid);
          }
        } catch (error) {
          console.error(isRegister ? 'Registration error:' : 'Login error:', error);
        }
      });

      // Toggle between login and register mode
      document.getElementById('toggleMode').addEventListener('click', (e) => {
        e.preventDefault();
        
        const isRegisterMode = document.getElementById('actionButton').dataset.action === 'register';
        
        if (isRegisterMode) {
          document.getElementById('actionButton').value = 'Login';
          document.getElementById('actionButton').dataset.action = 'login';
          document.getElementById('toggleText').textContent = 'or Register';
        } else {
          document.getElementById('actionButton').value = 'Register';
          document.getElementById('actionButton').dataset.action = 'register';
          document.getElementById('toggleText').textContent = 'or Login';
        }
      });

      // Logout handler
      document.getElementById('logoutButton').addEventListener('click', async () => {
        // Remove the token cookie (log the user out)
        document.cookie = "idToken=; path=/; max-age=0";  // This removes the cookie

        // Optional: Redirect the user to the login page after logging out
        window.location.href = '/login';  // Replace with your login URL

        // Optional: Call Firebase to sign out (this clears any local Firebase state)
        const auth = getAuth();
        await signOut(auth);
        console.log('User logged out');
      });

      var userPage = document.getElementById('userPage');

      function setUserPage(id) {
        userPage.setAttribute("href", `/user/${id}`);
      }
    </script>
</head>
<body>
    <h1>Login / Register with Firebase</h1>

    <form id="authForm">
        <input type="email" id="email" placeholder="Email" required>
        <input type="password" id="password" placeholder="Password" required>

        <input type="submit" id="actionButton" value="Register" data-action="register">
    </form>

    <p id="toggleText">
        or <a href="#" id="toggleMode">Login</a>
    </p>

    <button id="logoutButton">Logout</button>
    <a href="#" id="userPage">User page</a>
</body>
</html>